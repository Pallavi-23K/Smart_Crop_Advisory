from flask import Flask, render_template, jsonify, request, send_from_directory
import pandas as pd
import os
from reportlab.pdfgen import canvas

# Import your DB connection and cursor from models.py
from backend.models import db, cursor

# Import bot-related functions
from backend.bot import translate_text, predict_temperature, predict_rainfall, recommend_crop

app = Flask(__name__)
os.makedirs("uploads", exist_ok=True)


# ------------------ TRANSLATIONS for soil analysis ------------------
translations = {
    "acidic": {
        "en": "тЪая╕П Soil acidic тЖТ Apply lime before sowing.",
        "kn": "тЪая╕П р▓ор▓гр│Нр▓гр│Б р▓Жр▓ор│Нр▓▓р│Ар▓пр▓╡р▓╛р▓Чр▓┐р▓жр│Ж тЖТ р▓мр│Ар▓Ь р▓мр▓┐р▓др│Нр▓др│Бр▓╡ р▓ор│Кр▓жр▓▓р│Б р▓╕р│Бр▓гр│Нр▓г р▓╣р▓Ър│Нр▓Ър▓┐.",
        "hi": "тЪая╕П рдорд┐рдЯреНрдЯреА рдЕрдореНрд▓реАрдп рд╣реИ тЖТ рдмреБрд╡рд╛рдИ рд╕реЗ рдкрд╣рд▓реЗ рдЪреБрдирд╛ рдбрд╛рд▓реЗрдВред",
        "te": "тЪая╕П р░ир▒Зр░▓ р░Жр░ор▒Нр░▓р░д р░Ор░Хр▒Нр░Хр▒Бр░╡р░Чр░╛ р░Йр░Вр░жр░┐ тЖТ р░╡р░┐р░др▒Нр░др░ир░╛р░ир░┐р░Хр░┐ р░ор▒Бр░Вр░жр▒Б р░Ър▒Бр░ир▒Нр░ир░В р░╡р▒Зр░пр░Вр░бр░┐.",
        "ta": "тЪая╕П роорогрпН роЕрооро┐ро▓рооро╛роХ роЙро│рпНро│родрпБ тЖТ ро╡ро┐родрпИроХрпНроХрпБроорпН роорпБройрпН роЪрпБрогрпНрогро╛роорпНрокрпБ рокрпЛроЯро╡рпБроорпН.",
        "ml": "тЪая╕П р┤ор┤гр╡Нр┤гр╡Н р┤Ер┤ор╡Нр┤▓р╡Ар┤пр┤В тЖТ р┤╡р┤┐р┤др┤пр╡Нр┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир┤др┤┐р┤ир╡Бр┤ор╡Бр┤ор╡Нр┤кр╡Н р┤Ър╡Бр┤гр╡Нр┤гр┤╛р┤ор╡Нр┤кр╡Н р┤Ър╡Зр╡╝р┤Хр╡Нр┤Хр╡Бр┤Х."
    },
    "nitrogen": {
        "en": "тЪая╕П Nitrogen low тЖТ Apply Urea.",
        "kn": "тЪая╕П р▓ир│Ир▓Яр│Нр▓░р│Лр▓Ьр▓ир│Н р▓Хр▓бр▓┐р▓ор│Ж тЖТ р▓пр│Вр▓░р▓┐р▓пр▓╛ р▓╣р▓Ър│Нр▓Ър▓┐.",
        "hi": "тЪая╕П рдирд╛рдЗрдЯреНрд░реЛрдЬрди рдХрдо рд╣реИ тЖТ рдпреВрд░рд┐рдпрд╛ рдбрд╛рд▓реЗрдВред",
        "te": "тЪая╕П р░ир░др▒Нр░░р░Ьр░ир░┐ р░др░Хр▒Нр░Хр▒Бр░╡р░Чр░╛ р░Йр░Вр░жр░┐ тЖТ р░пр▒Вр░░р░┐р░пр░╛ р░╡р▒Зр░пр░Вр░бр░┐.",
        "ta": "тЪая╕П роирпИроЯрпНро░роЬройрпН роХрпБро▒рпИро╡ро╛роХ роЙро│рпНро│родрпБ тЖТ ропрпВро░ро┐ропро╛ рокрпЛроЯро╡рпБроорпН.",
        "ml": "тЪая╕П р┤ир╡Ир┤Яр╡Нр┤░р┤Ьр╡╗ р┤Хр╡Бр┤▒р┤╡р╡Н тЖТ р┤пр╡Вр┤░р┤┐р┤п р┤Ър╡Зр╡╝р┤Хр╡Нр┤Хр╡Бр┤Х."
    },
    "phosphorus": {
        "en": "тЪая╕П Phosphorus low тЖТ Apply DAP.",
        "kn": "тЪая╕П р▓лр▓╛р▓╕р│Нр▓лр▓░р▓╕р│Н р▓Хр▓бр▓┐р▓ор│Ж тЖТ р▓бр▓┐р▓Ор▓кр▓┐ р▓╣р▓Ър│Нр▓Ър▓┐.",
        "hi": "тЪая╕П рдлрд╛рд╕реНрдлреЛрд░рд╕ рдХрдо рд╣реИ тЖТ рдбреАрдПрдкреА рдбрд╛рд▓реЗрдВред",
        "te": "тЪая╕П р░лр░╛р░╕р▒Нр░лр░░р░╕р▒Н р░др░Хр▒Нр░Хр▒Бр░╡р░Чр░╛ р░Йр░Вр░жр░┐ тЖТ р░бр░┐р░Пр░кр▒А р░╡р▒Зр░пр░Вр░бр░┐.",
        "ta": "тЪая╕П рокро╛ро╕рпНрокро░ро╕рпН роХрпБро▒рпИро╡ро╛роХ роЙро│рпНро│родрпБ тЖТ роЯро┐роПрокро┐ рокрпЛроЯро╡рпБроорпН.",
        "ml": "тЪая╕П р┤лр╡Лр┤╕р╡Нр┤лр┤▒р┤╕р╡Н р┤Хр╡Бр┤▒р┤╡р╡Н тЖТ р┤бр┤┐.р┤О.р┤кр┤┐ р┤Ър╡Зр╡╝р┤Хр╡Нр┤Хр╡Бр┤Х."
    },
    "potassium": {
        "en": "тЪая╕П Potassium low тЖТ Apply MOP.",
        "kn": "тЪая╕П р▓кр│Кр▓Яр▓╛р▓╖р▓┐р▓пр▓В р▓Хр▓бр▓┐р▓ор│Ж тЖТ р▓Ор▓ор│Н.р▓У.р▓кр▓┐ р▓╣р▓Ър│Нр▓Ър▓┐.",
        "hi": "тЪая╕П рдкреЛрдЯреИрд╢рд┐рдпрдо рдХрдо рд╣реИ тЖТ рдПрдордУрдкреА рдбрд╛рд▓реЗрдВред",
        "te": "тЪая╕П р░кр▒Кр░Яр░╛р░╖р░┐р░пр░В р░др░Хр▒Нр░Хр▒Бр░╡р░Чр░╛ р░Йр░Вр░жр░┐ тЖТ р░Ор░ор▒НтАМр░Ур░кр▒А р░╡р▒Зр░╢р░Вр░бр░┐.",
        "ta": "тЪая╕П рокрпКроЯрпНроЯро╛роЪро┐ропроорпН роХрпБро▒рпИро╡ро╛роХ роЙро│рпНро│родрпБ тЖТ роОроорпН.роУ.рокро┐ рокрпЛроЯро╡рпБроорпН.",
        "ml": "тЪая╕П р┤кр╡Кр┤Яр╡Нр┤Яр┤╛р┤╕р╡Нр┤пр┤В р┤Хр╡Бр┤▒р┤╡р╡Н тЖТ р┤Ор┤В.р┤Т.р┤кр┤┐ р┤Ър╡Зр╡╝р┤Хр╡Нр┤Хр╡Бр┤Х."
    },
    "healthy": {
        "en": "тЬЕ Soil is healthy ЁЯСН",
        "kn": "тЬЕ р▓ор▓гр│Нр▓гр│Б р▓Жр▓░р│Лр▓Чр│Нр▓пр▓Хр▓░р▓╡р▓╛р▓Чр▓┐р▓жр│Ж ЁЯСН",
        "hi": "тЬЕ рдорд┐рдЯреНрдЯреА рд╕реНрд╡рд╕реНрде рд╣реИ ЁЯСН",
        "te": "тЬЕ р░ир▒Зр░▓ р░Жр░░р▒Лр░Чр▒Нр░пр░Вр░Чр░╛ р░Йр░Вр░жр░┐ ЁЯСН",
        "ta": "тЬЕ роорогрпН роЖро░рпЛроХрпНроХро┐ропрооро╛роХ роЙро│рпНро│родрпБ ЁЯСН",
        "ml": "тЬЕ р┤ор┤гр╡Нр┤гр╡Н р┤Жр┤░р╡Лр┤Чр╡Нр┤пр┤Хр┤░р┤ор┤╛р┤гр╡Н ЁЯСН"
    }
}


def get_recommendations(data, lang="en"):
    advice = []
    if float(data.get("ph", 7)) < 5.5:
        advice.append(translations["acidic"][lang])
    if float(data.get("nitrogen", 0)) < 150:
        advice.append(translations["nitrogen"][lang])
    if float(data.get("phosphorus", 0)) < 12:
        advice.append(translations["phosphorus"][lang])
    if float(data.get("potassium", 0)) < 150:
        advice.append(translations["potassium"][lang])
    if not advice:
        advice.append(translations["healthy"][lang])
    return advice


# ------------------ UI texts ------------------
ui_texts = {
    "English": {"heading": "Farmers Learning Hub", "search": "Search for crops...", "button": "Search", "not_found": "Not found"},
    "Telugu": {"heading": "р░░р▒Ир░др▒Бр░▓ р░Ер░нр▒Нр░пр░╛р░╕ р░Хр▒Зр░Вр░жр▒Нр░░р░В", "search": "р░кр░Вр░Яр░▓р░ир▒Б р░╡р▒Жр░др░Хр░Вр░бр░┐...", "button": "р░╡р▒Жр░др░Хр░Вр░бр░┐", "not_found": "р░Хр░ир░мр░б р░▓р▒Зр░жр▒Б"},
    "Kannada": {"heading": "р▓░р│Ир▓др▒Бр░▓ р▓Ер▓зр│Нр▓пр▓пр▓и р▓Хр│Зр▓Вр▓жр│Нр▓░", "search": "р▓мр│Жр▓│р│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓╣р│Бр▓бр│Бр▓Хр▓┐...", "button": "р▓╣р│Бр▓бр│Бр▓Хр│Б", "not_found": "р▓╕р▓┐р▓Хр│Нр▓Хр▓▓р▓┐р▓▓р│Нр▓▓"},
    "Tamil": {"heading": "ро╡ро┐ро╡роЪро╛ропро┐роХро│рпН роХро▒рпНро▒ро▓рпН роорпИропроорпН", "search": "рокропро┐ро░рпНроХро│рпИродрпН родрпЗроЯрпБроЩрпНроХро│рпН...", "button": "родрпЗроЯрпБ", "not_found": "роХро┐роЯрпИроХрпНроХро╡ро┐ро▓рпНро▓рпИ"},
    "Malayalam": {"heading": "р┤Хр╡╝р┤╖р┤Хр┤░р╡Бр┤Яр╡Ж р┤кр┤ар┤и р┤Хр╡Зр┤ир╡Нр┤жр╡Нр┤░р┤В", "search": "р┤╡р┤┐р┤│р┤Хр╡╛ р┤др┤┐р┤░р┤пр╡Бр┤Х...", "button": "р┤др┤┐р┤░р┤пр╡Бр┤Х", "not_found": "р┤Хр┤гр╡Нр┤Яр╡Бр┤кр┤┐р┤Яр┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир┤┐р┤▓р╡Нр┤▓"}
}


# ------------------ Crops ------------------
crops = {
    "wheat": {
        "English": {"name": "Wheat", "description": "Wheat is a rabi cereal crop grown in cool climates. Needs moderate irrigation and well-drained soil.", "video": "https://www.youtube.com/embed/SJv8bHTq4mU"},
        "Telugu": {"name": "р░Чр▒Лр░зр▒Бр░о", "description": "р░Чр▒Лр░зр▒Бр░о р░░р░мр▒А р░зр░╛р░ир▒Нр░пр░В, р░Ър░▓р▒Нр░▓р░ир░┐ р░╡р░╛р░др░╛р░╡р░░р░гр░Вр░▓р▒Л р░кр▒Жр░░р▒Бр░Чр▒Бр░др▒Бр░Вр░жр░┐. р░ор░┐р░др░ор▒Ир░и р░ир▒Ар░Яр░┐ р░Ер░╡р░╕р░░р░В р░ор░░р░┐р░пр▒Б р░мр░╛р░Чр░╛ р░бр▒Нр░░р▒Жр░пр░┐р░ир▒Н р░Ер░пр▒Нр░пр▒З р░ир▒Зр░▓ р░Хр░╛р░╡р░╛р░▓р░┐.", "video": "https://www.youtube.com/embed/SJv8bHTq4mU"},
        "Kannada": {"name": "р▓Чр│Лр▓зр▓┐", "description": "р▓Чр│Лр▓зр▓┐ р▓░р▓мр▓┐ р▓зр▓╛р▓ир│Нр▓пр▓╡р▓╛р▓Чр▓┐р▓жр│Нр▓жр│Б р▓др▓Вр▓кр│Б р▓╣р▓╡р▓╛р▓ор▓╛р▓ир▓жр▓▓р│Нр▓▓р│З р▓мр│Жр▓│р│Жр▓пр│Бр▓др│Нр▓др▓жр│Ж. р▓ор▓┐р▓др▓╡р▓╛р▓ж р▓ир│Ар▓░р▓╛р▓╡р▓░р▓┐ р▓ор▓др│Нр▓др│Б р▓Йр▓др│Нр▓др▓о р▓ир│Ар▓░р│Б р▓╣р▓░р▓┐р▓жр│Бр▓╣р│Лр▓Чр│Бр▓╡ р▓ор▓гр│Нр▓гр│Б р▓мр│Зр▓Хр│Б.", "video": "https://www.youtube.com/embed/SJv8bHTq4mU"},
        "Tamil": {"name": "роХрпЛродрпБроорпИ", "description": "роХрпЛродрпБроорпИ ро░рокро┐ рокропро┐ро░рпН; роХрпБро│ро┐ро░рпНроирпНрод роХро╛ро▓роиро┐ро▓рпИроХро│ро┐ро▓рпН ро╡ро│ро░рпБроорпН. рооро┐родрооро╛рой рокро╛роЪройроорпН рооро▒рпНро▒рпБроорпН роиройрпНроХрпБ ро╡роЯро┐роХроЯрпНроЯрпБроорпН роорогрпН родрпЗро╡рпИ.", "video": "https://www.youtube.com/embed/SJv8bHTq4mU"},
        "Malayalam": {"name": "р┤Чр╡Лр┤др┤ор╡Нр┤кр╡Н", "description": "р┤Чр╡Лр┤др┤ор╡Нр┤кр╡Н р┤▒р┤мр╡Нр┤мр┤┐ р┤зр┤╛р┤ир╡Нр┤пр┤В р┤Жр┤гр╡Н, р┤др┤гр╡Бр┤др╡Нр┤д р┤Хр┤╛р┤▓р┤╛р┤╡р┤╕р╡Нр┤ер┤пр┤┐р┤▓р╡Н р┤╡р┤│р┤░р╡Бр┤ир╡Нр┤ир╡Б. р┤ор╖Тр╢нр┤ор┤╛р┤п р┤Ьр┤▓р┤╕р╡Зр┤Ър┤ир┤╡р╡Бр┤В р┤ир┤▓р╡Нр┤▓ р┤бр╡Нр┤░р╡Жр┤пр┤┐р┤ир╡Бр┤В р┤Жр┤╡р┤╢р╡Нр┤пр┤ор┤╛р┤гр╡Н.", "video": "https://www.youtube.com/embed/SJv8bHTq4mU"}
    },
    "rice": {
        "English": {"name": "Rice", "description": "Rice is a staple crop often grown in flooded fields; prefers warm temperatures and abundant water.", "video": "https://www.youtube.com/embed/FW_bw9jdrlQ"},
        "Telugu": {"name": "р░мр░┐р░пр▒Нр░пр░В", "description": "р░мр░┐р░пр▒Нр░пр░В р░ир▒Ар░Яр░┐р░др▒Л р░ир░┐р░Вр░кр░┐р░и р░кр▒Кр░▓р░╛р░▓р▒Нр░▓р▒Л р░кр▒Жр░░р▒Бр░Чр▒Бр░др▒Бр░Вр░жр░┐; р░╡р▒Зр░бр░┐ р░╡р░╛р░др░╛р░╡р░░р░гр░В р░ор░░р░┐р░пр▒Б р░Ор░Хр▒Нр░Хр▒Бр░╡ р░ир▒Ар░░р▒Б р░Ер░╡р░╕р░░р░В.", "video": "https://www.youtube.com/embed/FW_bw9jdrlQ"},
        "Kannada": {"name": "р▓Ер▓ир│Нр▓и", "description": "р▓Ер▓ир│Нр▓и р▓ир│Ар▓░р▓┐р▓ир▓┐р▓Вр▓ж р▓др│Бр▓Вр▓мр▓┐р▓ж р▓др│Лр▓Яр▓Чр▓│р▓▓р│Нр▓▓р▓┐ р▓мр│Жр▓│р│Жр▓пр│Бр▓др│Нр▓др▓жр│Ж; р▓мр▓┐р▓╕р▓┐ р▓╣р▓╡р▓╛р▓ор▓╛р▓и р▓ор▓др│Нр▓др│Б р▓╣р│Жр▓Ър│Нр▓Ър│Б р▓Ьр▓▓р▓╛р▓╡р▓╢р│Нр▓пр▓Хр▓др│Ж.", "video": "https://www.youtube.com/embed/FW_bw9jdrlQ"},
        "Tamil": {"name": "роЕро░ро┐роЪро┐", "description": "роЕро░ро┐роЪро┐ ро╡рпЖро╡рпНро╡рпЗро▒рпБ роирпАро░рпНродрпНродрпЗ needро╛ ро╡ропро▓рпНроХро│рпН; ро╡рпЖрокрпНрокрооро╛рой роЗроЯроорпН рооро▒рпНро▒рпБроорпН роЕродро┐роХ роирпАро░рпН родрпЗро╡рпИ.", "video": "https://www.youtube.com/embed/FW_bw9jdrlQ"},
        "Malayalam": {"name": "р┤Ер┤░р┤┐", "description": "р┤Ер┤░р┤┐ р┤╡р╡Жр┤│р╡Нр┤│р┤ор╡Бр┤│р╡Нр┤│ р┤╡р┤пр┤▓р╡Бр┤Хр┤│р┤┐р╡╜ р┤╡р┤│р┤░р╡Бр┤ир╡Нр┤ир╡Б; р┤Ър╡Вр┤Яр╡Н р┤Хр┤╛р┤▓р┤╛р┤╡р┤╕р╡Нр┤ер┤пр╡Бр┤В р┤Ер┤зр┤┐р┤Х р┤Ьр┤▓р┤╡р╡Бр┤В р┤Жр┤╡р┤╢р╡Нр┤пр┤В.", "video": "https://www.youtube.com/embed/FW_bw9jdrlQ"}
    },
    "maize": {
        "English": {"name": "Maize", "description": "Maize is a kharif cereal crop requiring warm weather and moderate rainfall.", "video": "https://www.youtube.com/embed/yXuYFhQOqGQ"},
        "Telugu": {"name": "р░ор▒Кр░Хр▒Нр░Хр░Ьр▒Кр░ир▒Нр░и", "description": "р░ор▒Кр░Хр▒Нр░Хр░Ьр▒Кр░ир▒Нр░и р░Цр░░р▒Ар░лр▒Н р░зр░╛р░ир▒Нр░пр░В, р░╡р▒Зр░бр░┐ р░╡р░╛р░др░╛р░╡р░░р░гр░В р░ор░░р░┐р░пр▒Б р░ор░┐р░др░ор▒Ир░и р░╡р░░р▒Нр░╖р░кр░╛р░др░В р░Ер░╡р░╕р░░р░В.", "video": "https://www.youtube.com/embed/yXuYFhQOqGQ"},
        "Kannada": {"name": "р▓╕р│Кр▓кр│Нр▓кр│Б р▓Ьр│Лр▓│", "description": "р▓╕р│Кр▓кр│Нр▓кр│Б р▓Ьр│Лр▓│ р▓Цр▓░р▓┐р▓лр│Н р▓зр▓╛р▓ир│Нр▓п, р▓мр▓┐р▓╕р▓┐р▓▓р│Б р▓╣р▓╡р▓╛р▓ор▓╛р▓и р▓ор▓др│Нр▓др│Б р▓ор▓зр│Нр▓пр▓о р▓ор▓│р│Жр▓п р▓Ер▓Чр▓др│Нр▓п.", "video": "https://www.youtube.com/embed/yXuYFhQOqGQ"},
        "Tamil": {"name": "роЪрпЛро│роорпН", "description": "роЪрпЛро│роорпН роТро░рпБ роХрпНро░ро╛роГрокрпН рокропро┐ро░рпН; ро╡рпЖрокрпНрокрооро╛рой роЗроЯроорпН рооро▒рпНро▒рпБроорпН рооро┐родрооро╛рой рооро┤рпИ родрпЗро╡рпИ.", "video": "https://www.youtube.com/embed/yXuYFhQOqGQ"},
        "Malayalam": {"name": "р┤ор┤Хр╡Нр┤Хр┤╛", "description": "р┤ор┤Хр╡Нр┤Х р┤Тр┤░р╡Б р┤Цр┤░р┤┐р┤лр╡Н р┤зр┤╛р┤ир╡Нр┤пр┤В; р┤Ър╡Вр┤Яр╡Н р┤Хр┤╛р┤▓р┤╛р┤╡р┤╕р╡Нр┤ер┤пр╡Бр┤В р┤ор┤┐р┤др┤ор┤╛р┤п р┤ор┤┤р┤пр╡Бр┤В р┤Жр┤╡р┤╢р╡Нр┤пр┤В.", "video": "https://www.youtube.com/embed/yXuYFhQOqGQ"}
    },
    "tomato": {
        "English": {"name": "Tomato", "description": "Tomato is a Kharif vegetable crop; requires well-drained soil and warm weather.", "video": "https://www.youtube.com/embed/F7lIP9lmLlo"},
        "Telugu": {"name": "р░Яр░ор▒Лр░Яр░╛", "description": "р░Яр░ор▒Лр░Яр░╛ р░Цр░░р▒Ар░лр▒Н р░Хр▒Вр░░р░Чр░╛р░п, р░мр░╛р░Чр░╛ р░бр▒Нр░░р▒Жр░пр░┐р░ир▒Н р░Ер░пр▒Нр░пр▒З р░ир▒Зр░▓ р░ор░░р░┐р░пр▒Б р░╡р▒Зр░бр░┐ р░╡р░╛р░др░╛р░╡р░░р░гр░В р░Хр░╛р░╡р░╛р░▓р░┐.", "video": "https://www.youtube.com/embed/F7lIP9lmLlo"},
        "Kannada": {"name": "р▓Яр│Кр▓ор│Нр▓пр▓╛р▓Яр│К", "description": "р▓Яр│Кр▓ор│Нр▓пр▓╛р▓Яр│К р▓Цр▓░р▓┐р▓лр│Н р▓др▓░р▓Хр▓╛р▓░р▓┐р▓пр▓╛р▓Чр▓┐р▓жр│Ж; р▓Йр▓др│Нр▓др▓о р▓бр│Нр▓░р│Жр▓ир│Н р▓Зр▓░р│Бр▓╡ р▓ор▓гр│Нр▓гр│Б р▓ор▓др│Нр▓др│Б р▓мр▓┐р▓╕р▓┐р▓п р▓╣р▓╡р▓╛р▓ор▓╛р▓и р▓Ер▓Чр▓др│Нр▓п.", "video": "https://www.youtube.com/embed/F7lIP9lmLlo"},
        "Tamil": {"name": "родроХрпНроХро╛ро│ро┐", "description": "родроХрпНроХро╛ро│ро┐ роТро░рпБ роХрпНро░ро╛роГрокрпН роХро╛ропрпНроХро▒ро┐; роиройрпНроХрпБ ро╡роЯро┐роХроЯрпНроЯрпБроорпН роорогрпН рооро▒рпНро▒рпБроорпН ро╡рпЖрокрпНрокрооро╛рой роЗроЯроорпН родрпЗро╡рпИ.", "video": "https://www.youtube.com/embed/F7lIP9lmLlo"},
        "Malayalam": {"name": "р┤др┤Хр╡Нр┤Хр┤╛р┤│р┤┐", "description": "р┤др┤Хр╡Нр┤Хр┤╛р┤│р┤┐ р┤Цр┤░р┤┐р┤лр╡Н р┤кр┤Ър╡Нр┤Ър┤Хр╡Нр┤Хр┤▒р┤┐; р┤ир┤▓р╡Нр┤▓ р┤бр╡Нр┤░р╡Жр┤пр┤┐р╡╗ р┤Йр┤│р╡Нр┤│ р┤ор┤гр╡Нр┤гр╡Бр┤В р┤Ър╡Вр┤Яр╡Н р┤Хр┤╛р┤▓р┤╛р┤╡р┤╕р╡Нр┤ер┤пр╡Бр┤В р┤Жр┤╡р┤╢р╡Нр┤пр┤В.", "video": "https://www.youtube.com/embed/F7lIP9lmLlo"}
    },
    "potato": {
        "English": {"name": "Potato", "description": "Potato is a rabi tuber crop; prefers well-drained loamy soil and cool climate.", "video": "https://www.youtube.com/embed/l0M_Ek-0a7k"},
        "Telugu": {"name": "р░Жр░▓р▒Бр░Чр░бр▒Нр░б", "description": "р░Жр░▓р▒Бр░Чр░бр▒Нр░б р░░р░мр▒А р░Хр░Вр░жр░В р░кр░Вр░Я, р░мр░╛р░Чр░╛ р░бр▒Нр░░р▒Жр░пр░┐р░ир▒Н р░Ер░пр▒Нр░пр▒З р░ор░Яр▒Нр░Яр░┐р░ир░┐ р░ор░░р░┐р░пр▒Б р░Ър░▓р▒Нр░▓р░ир░┐ р░╡р░╛р░др░╛р░╡р░░р░гр░В р░Зр░╖р▒Нр░Яр░В.", "video": "https://www.youtube.com/embed/l0M_Ek-0a7k"},
        "Kannada": {"name": "р▓Ер▓▓р│Вр▓Чр▓бр│Нр▓бр│Ж", "description": "р▓Ер▓▓р│Вр▓Чр▓бр│Нр▓бр│Ж р▓░р▓мр▓┐ р▓Яр│Нр▓пр│Вр▓мр▓░р│Н р▓кр│Ир▓░р▓┐р▓╕р│Н; р▓Йр▓др│Нр▓др▓о р▓бр│Нр▓░р│Жр▓ир│Н р▓Зр▓░р│Бр▓╡ р▓ор▓гр│Нр▓гр│Б р▓ор▓др│Нр▓др│Б р▓др▓Вр▓кр│Б р▓╣р▓╡р▓╛р▓ор▓╛р▓и р▓мр│Зр▓Хр│Б.", "video": "https://www.youtube.com/embed/l0M_Ek-0a7k"},
        "Tamil": {"name": "роЙро░рпБро│рпИроХрпНроХро┐ро┤роЩрпНроХрпБ", "description": "роЙро░рпБро│рпИроХрпНроХро┐ро┤роЩрпНроХрпБ ро░рокро┐ роХро┐ро┤роЩрпНроХрпБ рокропро┐ро░рпН; роиройрпНроХрпБ ро╡роЯро┐роХроЯрпНроЯрпБроорпН роорогрпН рооро▒рпНро▒рпБроорпН роХрпБро│ро┐ро░рпНроирпНрод роХро╛ро▓роиро┐ро▓рпИ ро╡ро┐ро░рпБроорпНрокрпБроорпН.", "video": "https://www.youtube.com/embed/l0M_Ek-0a7k"},
        "Malayalam": {"name": "р┤Йр┤░р╡Бр┤│р┤Хр╡Нр┤Хр┤┐р┤┤р┤Щр╡Нр┤Щр╡Н", "description": "р┤Йр┤░р╡Бр┤│р┤Хр╡Нр┤Хр┤┐р┤┤р┤Щр╡Нр┤Щр╡Н р┤▒р┤мр╡Нр┤мр┤┐ р┤Яр╡Нр┤пр╡Вр┤мр╡╝; р┤ир┤▓р╡Нр┤▓ р┤бр╡Нр┤░р╡Жр┤пр┤┐р╡╗ р┤Йр┤│р╡Нр┤│ р┤ор┤гр╡Нр┤гр╡Бр┤В р┤др┤гр╡Бр┤др╡Нр┤д р┤Хр┤╛р┤▓р┤╛р┤╡р┤╕р╡Нр┤ер┤пр╡Бр┤В р┤Жр┤╡р┤╢р╡Нр┤пр┤В.", "video": "https://www.youtube.com/embed/l0M_Ek-0a7k"}
    },
    "onion": {
        "English": {"name": "Onion", "description": "Onion is a rabi bulb crop; requires fertile, well-drained soil and moderate irrigation.", "video": "https://www.youtube.com/embed/nxRQp4BJ0U0"},
        "Telugu": {"name": "р░Йр░▓р▒Нр░▓р░┐р░кр░╛р░п", "description": "р░Йр░▓р▒Нр░▓р░┐р░кр░╛р░п р░░р░мр▒А р░мр░▓р▒Нр░мр▒Н р░кр░Вр░Я; р░╕р░ор▒Гр░жр▒Нр░зр░┐, р░мр░╛р░Чр░╛ р░бр▒Нр░░р▒Жр░пр░┐р░ир▒Н р░Ер░пр▒Нр░пр▒З р░ир▒Зр░▓ р░ор░░р░┐р░пр▒Б р░ор░┐р░др░ор▒Ир░и р░ир▒Ар░Яр░┐ р░Ер░╡р░╕р░░р░В.", "video": "https://www.youtube.com/embed/nxRQp4BJ0U0"},
        "Kannada": {"name": "р▓Ир▓░р│Бр▓│р│Нр▓│р▓┐", "description": "р▓Ир▓░р│Бр▓│р│Нр▓│р▓┐ р▓░р▓мр▓┐ р▓мр▓▓р│Нр▓мр│Н р▓кр│Ир▓░р▓┐р▓╕р│Н; р▓лр▓▓р▓╡р▓др│Нр▓др▓╛р▓ж, р▓Йр▓др│Нр▓др▓о р▓бр│Нр▓░р│Жр▓ир│Н р▓Зр▓░р│Бр▓╡ р▓ор▓гр│Нр▓гр│Б р▓ор▓др│Нр▓др│Б р▓ор▓зр│Нр▓пр▓о р▓ир│Ар▓░р▓╛р▓╡р▓░р▓┐ р▓мр│Зр▓Хр│Б.", "video": "https://www.youtube.com/embed/nxRQp4BJ0U0"},
        "Tamil": {"name": "ро╡рпЖроЩрпНроХро╛ропроорпН", "description": "ро╡рпЖроЩрпНроХро╛ропроорпН ро░рокро┐ рокрпВрогрпНроЯрпБ рокропро┐ро░рпН; ро╡ро│рооро╛рой, роиройрпНроХрпБ ро╡роЯро┐роХроЯрпНроЯрпБроорпН роорогрпН рооро▒рпНро▒рпБроорпН рооро┐родрооро╛рой рокро╛роЪройроорпН родрпЗро╡рпИ.", "video": "https://www.youtube.com/embed/nxRQp4BJ0U0"},
        "Malayalam": {"name": "р┤╕р┤╡р┤╛р┤│", "description": "р┤╕р┤╡р┤╛р┤│ р┤▒р┤мр╡Нр┤мр┤┐ р┤мр╡╛р┤мр╡Н; р┤Йр┤др╡Нр┤др┤ор┤В, р┤ир┤▓р╡Нр┤▓ р┤бр╡Нр┤░р╡Жр┤пр┤┐р╡╗ р┤Йр┤│р╡Нр┤│ р┤ор┤гр╡Нр┤гр╡Бр┤В р┤ор┤┐р┤др┤ор┤╛р┤п р┤Ьр┤▓р┤╕р╡Зр┤Ър┤ир┤╡р╡Бр┤В р┤Жр┤╡р┤╢р╡Нр┤пр┤В.", "video": "https://www.youtube.com/embed/nxRQp4BJ0U0"}
    },
    "chilli": {
        "English": {"name": "Chilli", "description": "Chilli is a kharif spice crop; requires warm climate and well-drained soil.", "video": "https://www.youtube.com/embed/JXvL6ZTRzWk"},
        "Telugu": {"name": "р░ор░┐р░░р▒Нр░Ър░┐", "description": "р░ор░┐р░░р▒Нр░Ър░┐ р░Цр░░р▒Ар░лр▒Н р░ор░╕р░╛р░▓р░╛ р░кр░Вр░Я; р░╡р▒Зр░бр░┐ р░╡р░╛р░др░╛р░╡р░░р░гр░В р░ор░░р░┐р░пр▒Б р░мр░╛р░Чр░╛ р░бр▒Нр░░р▒Жр░пр░┐р░ир▒Н р░Ер░пр▒Нр░пр▒З р░ир▒Зр░▓ р░Хр░╛р░╡р░╛р░▓р░┐.", "video": "https://www.youtube.com/embed/JXvL6ZTRzWk"},
        "Kannada": {"name": "р▓ор│Жр▓гр▓╕р│Б", "description": "р▓ор│Жр▓гр▓╕р│Б р▓Цр▓░р▓┐р▓лр│Н р▓ор▓╕р▓╛р▓▓р│Ж; р▓мр▓┐р▓╕р▓┐р▓▓р│Б р▓╣р▓╡р▓╛р▓ор▓╛р▓и р▓ор▓др│Нр▓др│Б р▓Йр▓др│Нр▓др▓о р▓бр│Нр▓░р│Жр▓ир│Н р▓Зр▓░р│Бр▓╡ р▓ор▓гр│Нр▓гр│Б р▓Ер▓Чр▓др│Нр▓п.", "video": "https://www.youtube.com/embed/JXvL6ZTRzWk"},
        "Tamil": {"name": "рооро┐ро│роХро╛ропрпН", "description": "рооро┐ро│роХро╛ропрпН роХрпНро░ро╛роГрокрпН роороЪро╛ро▓ро╛ рокропро┐ро░рпН; ро╡рпЖрокрпНрокрооро╛рой роЗроЯроорпН рооро▒рпНро▒рпБроорпН роиройрпНроХрпБ ро╡роЯро┐роХроЯрпНроЯрпБроорпН роорогрпН родрпЗро╡рпИ.", "video": "https://www.youtube.com/embed/JXvL6ZTRzWk"},
        "Malayalam": {"name": "р┤ор╡Бр┤│р┤Хр╡Н", "description": "р┤ор╡Бр┤│р┤Хр╡Н р┤Цр┤░р┤┐р┤лр╡Н р┤ор┤╕р┤╛р┤▓; р┤Ър╡Вр┤Яр╡Н р┤Хр┤╛р┤▓р┤╛р┤╡р┤╕р╡Нр┤ер┤пр╡Бр┤В р┤ир┤▓р╡Нр┤▓ р┤бр╡Нр┤░р╡Жр┤пр┤┐р╡╗ р┤Йр┤│р╡Нр┤│ р┤ор┤гр╡Нр┤гр╡Бр┤В р┤Жр┤╡р┤╢р╡Нр┤пр┤В.", "video": "https://www.youtube.com/embed/JXvL6ZTRzWk"}
    },
    "cotton": {
        "English": {"name": "Cotton", "description": "Cotton is a kharif fiber crop; requires warm climate and moderate rainfall.", "video": "https://www.youtube.com/embed/2S1nKQ2IcoI"},
        "Telugu": {"name": "р░кр░др▒Нр░др░┐", "description": "р░кр░др▒Нр░др░┐ р░Цр░░р▒Ар░лр▒Н р░др░Вр░др░┐ р░кр░Вр░Я; р░╡р▒Зр░бр░┐ р░╡р░╛р░др░╛р░╡р░░р░гр░В р░ор░░р░┐р░пр▒Б р░ор░┐р░др░ор▒Ир░и р░╡р░░р▒Нр░╖р░кр░╛р░др░В р░Ер░╡р░╕р░░р░В.", "video": "https://www.youtube.com/embed/2S1nKQ2IcoI"},
        "Kannada": {"name": "р▓╣р▓др│Нр▓др▓┐", "description": "р▓╣р▓др│Нр▓др▓┐ р▓Цр▓░р▓┐р▓лр│Н р▓мр▓Яр│Нр▓Яр│Ж; р▓мр▓┐р▓╕р▓┐р▓▓р│Б р▓╣р▓╡р▓╛р▓ор▓╛р▓и р▓ор▓др│Нр▓др│Б р▓ор▓зр│Нр▓пр▓о р▓ор▓│р│Жр▓п р▓Ер▓Чр▓др│Нр▓п.", "video": "https://www.youtube.com/embed/2S1nKQ2IcoI"},
        "Tamil": {"name": "рокро░рпБродрпНродро┐", "description": "рокро░рпБродрпНродро┐ роХрпНро░ро╛роГрокрпН роиро╛ро░рпН рокропро┐ро░рпН; ро╡рпЖрокрпНрокрооро╛рой роЗроЯроорпН рооро▒рпНро▒рпБроорпН рооро┐родрооро╛рой рооро┤рпИ родрпЗро╡рпИ.", "video": "https://www.youtube.com/embed/2S1nKQ2IcoI"},
        "Malayalam": {"name": "р┤кр┤▒р╡Нр┤▒р┤┐", "description": "р┤кр┤▒р╡Нр┤▒р┤┐ р┤Цр┤░р┤┐р┤лр╡Н р┤лр╡Ир┤мр╡╝; р┤Ър╡Вр┤Яр╡Н р┤Хр┤╛р┤▓р┤╛р┤╡р┤╕р╡Нр┤ер┤пр╡Бр┤В р┤ор┤┐р┤др┤ор┤╛р┤п р┤ор┤┤р┤пр╡Бр┤В р┤Жр┤╡р┤╢р╡Нр┤пр┤В.", "video": "https://www.youtube.com/embed/2S1nKQ2IcoI"}
    }
}


# ------------------ Schemes ------------------
schemes = {
    "Prime Minister Matsya Sampada Yojana": "https://pmmsy.dof.gov.in",
    "PM-KUSUM Scheme": "https://mnre.gov.in/solar/schemes/",
    "Sub-Mission on Agricultural Mechanization (SMAM)": "https://agrimachinery.nic.in",
    "National Agriculture Market Scheme (e-NAM)": "https://enam.gov.in",
    "Pradhan Mantri Kisan Samman Nidhi Yojana (PM-KISAN)": "https://pmkisan.gov.in",
    "Pradhan Mantri Fasal Bima Yojana (PMFBY)": "https://pmfby.gov.in",
    "Pradhan Mantri Krishi Sinchayee Yojana (PMKSY)": "https://pmksy.gov.in",
    "Pradhan Mantri Kisan Mandhan Scheme": "https://maandhan.in",
    "Kisan Credit Card (KCC) Scheme": "https://pmkisan.gov.in",
    "Soil Health Card Scheme": "https://soilhealth.dac.gov.in",
    "Agriculture Infrastructure Fund (AIF) Scheme": "https://agriinfra.dac.gov.in",
    "Krishi Udan Scheme": "https://www.civilaviation.gov.in/en/about-air-transport/krishi-udan",
    "Feed and Fodder Development Scheme": "https://dahd.nic.in",
    "Rashtriya Krishi Vikas Yojana (RKVY)": "https://rkvy.nic.in",
    "Paramparagat Krishi Vikas Yojana (PKVY)": "https://pgsindia-ncof.gov.in",
    "Farmer Development Certificate Scheme": "https://agricoop.nic.in",
    "Rashtriya Gokul Mission (RGM)": "https://dahd.nic.in/division/gokul-mission",
    "Dairy Entrepreneurship Development Scheme": "https://dahd.nic.in",
    "National Horticulture Mission": "https://nhb.gov.in",
    "National Mission for Sustainable Agriculture (NMSA)": "https://nmsa.dac.gov.in",
    "Seed Village Scheme": "https://seednet.gov.in",
    "Organic Farming Incentive Scheme": "https://pgsindia-ncof.gov.in",
    "Farmer Producer Organization (FPO)": "https://sfacindia.com",
    "Drones for Precision Farming": "https://agricoop.nic.in/en/drones",
    "National Beekeeping and Honey Mission Scheme": "https://nbb.gov.in"
}


# ------------------ Routes ------------------

@app.route('/')
def home():
    return render_template('home.html')


@app.route('/crop_recommend')
def crop_recommend():
    return render_template('bot.html')


@app.route('/farmhub')
def farmhub():
    languages = list(ui_texts.keys())
    return render_template('farmhub.html', languages=languages)


@app.route('/search')
def search():
    crop_q = request.args.get('crop', '').strip().lower()
    lang = request.args.get('lang', 'English')
    if lang not in ui_texts:
        lang = 'English'
    ui = ui_texts[lang]
    result = {"name": "", "description": "", "video": ""}
    if crop_q:
        for key, block in crops.items():
            if crop_q == key:
                result = block.get(lang, block.get('English', {}))
                break
            name_local = block.get(lang, {}).get('name', '').lower()
            name_en = block.get('English', {}).get('name', '').lower()
            if crop_q == name_local or crop_q == name_en:
                result = block.get(lang, block.get('English', {}))
                break
    if not result["name"]:
        result["name"] = ui.get("not_found", "Not found")
        result["description"] = ""
        result["video"] = ""
    return jsonify({"ui": ui, "crop": result})


@app.route('/schemes')
def schemes_page():
    return render_template('schemes.html', schemes=schemes)


@app.route('/get_link', methods=['POST'])
def get_link():
    scheme = request.form.get('scheme')
    link = schemes.get(scheme)
    if link:
        return jsonify({'url': link})
    else:
        return jsonify({'url': ''}), 404


@app.route('/women')
def women_page():
    return render_template('women.html')


@app.route('/weather')
def weather_page():
    return render_template('weather.html')


# ------------------ Soil Analysis ------------------
@app.route("/analyze", methods=["POST"])
def analyze():
    data = request.json
    lang = data.get("lang", "en")
    sql = """INSERT INTO soil_samples
        (farmer_name, contact, field_id, location, ph, ec, moisture, organic_carbon, nitrogen, phosphorus, potassium)
        VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"""
    cursor.execute(sql, (
        data.get("farmerName"), data.get("contact"), data.get("fieldId"),
        data.get("location"), data.get("ph"), data.get("ec"),
        data.get("moisture"), data.get("organic_carbon"), data.get("nitrogen"),
        data.get("phosphorus"), data.get("potassium")
    ))
    db.commit()
    advice = get_recommendations(data, lang)
    return jsonify({"recommendation": advice})
@app.route('/pest')
def pest():
    return render_template('pest.html')



@app.route("/upload_csv", methods=["POST"])
def upload_csv():
    file = request.files["file"]
    lang = request.form.get("lang", "en")
    filepath = os.path.join("uploads", file.filename)
    file.save(filepath)
    df = pd.read_csv(filepath)
    recommendations = []
    for _, row in df.iterrows():
        sql = """INSERT INTO soil_samples
            (farmer_name, contact, field_id, location, ph, ec, moisture, organic_carbon, nitrogen, phosphorus, potassium)
            VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"""
        cursor.execute(sql, tuple(row))
        advice = get_recommendations(row, lang)
        recommendations.append({
            "farmer": row["farmer_name"],
            "field": row["field_id"],
            "recommendation": advice
        })
    db.commit()
    return jsonify({"message": translations["healthy"][lang], "results": recommendations})


@app.route("/download_report/<int:id>")
def download_report(id):
    cursor.execute("SELECT * FROM soil_samples WHERE id=%s", (id,))
    row = cursor.fetchone()
    if not row:
        return "Report not found", 404
    filename = f"uploads/report_{id}.pdf"
    c = canvas.Canvas(filename)
    c.drawString(100, 750, "Soil Analysis Report")
    c.drawString(100, 730, f"Farmer: {row['farmer_name']}")
    c.drawString(100, 710, f"pH: {row['ph']}, Nitrogen: {row['nitrogen']}")
    recommendations = get_recommendations(row, "en")
    c.drawString(100, 690, "Recommendation: " + ", ".join([rec.replace("тЪая╕П ", "") for rec in recommendations]))
    c.save()
    return send_from_directory("uploads", f"report_{id}.pdf", as_attachment=True)


@app.route('/soil_analysis')
def soil_analysis_page():
    return render_template('soil.html')


if __name__ == '__main__':
    app.run(debug=True)
